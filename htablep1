ALGORITHM checkpoint_ldataStructure
VAR
htab := HASH_TABLE<INTEGER,INTEGER>;
setOne : ARRAY_OF INTEGER[4];
	    setTwo : ARRAY_OF INTEGER[5];
	setOfhtabKeys : ARRAY_OF INTEGER[9];
	i,counter : INTEGER := 0;
	sum : INTEGER := 0;

BEGIN
setOne := [3, 1, 7, 9];
setTwo := [2, 4, 1, 9, 3];

/* i insert the element of setOne and setTwo into htab the elements of the arrays  */

	FOR i FROM 0 TO setOne.length-1 DO
		IF (htab.lookup(setOne[i]) = TRUE) THEN
			count := htab.get(setOne[i]);
			htab.insert(setOne[i],count +1);
		ELSE
			htab.insert(setOne[i],1);
		END_IF
	END_FOR
 FOR i FROM 0 TO setTwo.length-1 DO
		IF (htab.lookup(setTwo[i]) = TRUE) THEN
			counter := htab.get(setTwo[i]);
			htab.insert(setTwo[i],counter+1);
		ELSE
			htab.insert(setTwo[i],1);
		END_IF
	END_FOR
	
	/*insert  keys in a third array (setOfhtabKeys) */

setOfhtabKeys := htab.getKeys();
FOR i FROM 0 TO setOfhtabKeys.length-1 DO
		IF(htab.get(setOfhtabKeys[i] = 1)
			sum := sum + setOfhtabKeys[i];
		END_IF
	END_FOR
	
	WRITE(sum);
	
END
